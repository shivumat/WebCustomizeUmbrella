{"version":3,"sources":["assets/img/Yellow umbrella.png","assets/img/yellow_loader.svg","assets/img/Pink umbrella.png","assets/img/pink_loader.svg","assets/img/Blue umbrella.png","assets/img/blue_loader.svg","assets/img/upload_icon.svg","config/colors.js","component/ColorSelector.jsx","component/CustomUmbrella.jsx","component/UploadButton.jsx","screens/Umbrella.jsx","App.js","reportWebVitals.js","index.js"],"names":["colors","YELLOW","color","rgb","border","umbrella","require","default","loader","PINK","BLUE","ColorSelector","props","colorKey","setColor","style","setIsLoading","styles","body","display","dot","slected","backgroundColor","marginRight","cursor","onColorClick","setTimeout","changeColor","Object","entries","map","i","onClick","className","CustomUmbrella","customImage","colorType","isLoading","width","marginLeft","loading","marginTop","right","bottom","position","src","uploadSVG","UploadButton","fileName","setFileTypeError","validFileTypes","setImageName","setImage","hiddenFileInput","useRef","height","textAlign","paddingTop","fontSize","name","whiteSpace","overflow","textOverflow","upload","float","current","click","ref","onChange","e","target","files","length","includes","type","file","reader","FileReader","onload","result","console","log","readAsDataURL","Umbrella","useState","setCustomImage","customImageName","setCustomImageName","fileTypeError","container","top","content","left","h1","fontWeight","marginBottom","h2","h3","h4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73b89dae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Yellow umbrella.28d67ebe.png\";","export default __webpack_public_path__ + \"static/media/yellow_loader.6a37e3be.svg\";","export default __webpack_public_path__ + \"static/media/Pink umbrella.9889a9b8.png\";","export default __webpack_public_path__ + \"static/media/pink_loader.4d893a66.svg\";","export default __webpack_public_path__ + \"static/media/Blue umbrella.2d36f97a.png\";","export default __webpack_public_path__ + \"static/media/blue_loader.cee80363.svg\";","export default __webpack_public_path__ + \"static/media/upload_icon.88a4b874.svg\";","const colors = {\r\n  YELLOW: {\r\n    color: \"yellow\",\r\n    rgb: \"255,255,0\",\r\n    border: \"rgb(255,239,213)\",\r\n    umbrella: require(\"../assets/img/Yellow umbrella.png\").default,\r\n    loader: require(\"../assets/img/yellow_loader.svg\").default,\r\n  },\r\n  PINK: {\r\n    color: \"pink\",\r\n    rgb: \"255,192,203\",\r\n    border: \"rgb(255,182,193)\",\r\n    umbrella: require(\"../assets/img/Pink umbrella.png\").default,\r\n    loader: require(\"../assets/img/pink_loader.svg\").default,\r\n  },\r\n  BLUE: {\r\n    color: \"blue\",\r\n    rgb: \"0,0,255\",\r\n    border: \"rgb(176,224,230)\",\r\n    umbrella: require(\"../assets/img/Blue umbrella.png\").default,\r\n    loader: require(\"../assets/img/blue_loader.svg\").default,\r\n  },\r\n};\r\n\r\nexport default colors;\r\n","import React from 'react'\r\nimport colors from '../config/colors'\r\n\r\nconst ColorSelector = (props) => {\r\n\r\n    const {colorKey, setColor, style, setIsLoading} = props;\r\n\r\n    const styles = {\r\n        body: {\r\n            ...style,\r\n            display: 'flex'\r\n        },\r\n        dot : (color, slected) =>  {\r\n            return {\r\n                border: `3px solid ${slected ? color.border : color.color}`,\r\n                backgroundColor: `${color.color}`, \r\n                marginRight: '5px',\r\n                cursor : 'pointer'\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeColor = (color) => {\r\n        setIsLoading(false)\r\n        setColor(color)\r\n    }\r\n\r\n    const onColorClick = (color) => {\r\n        if(color !== colorKey){\r\n            setIsLoading(true)\r\n            setTimeout(function(){ changeColor(color) }, 1000);\r\n        }\r\n    }\r\n\r\n    return <div style={styles.body}>\r\n        {Object.entries(colors)\r\n            .map((color,i) => <div \r\n                                onClick={() => onColorClick(color[0])}\r\n                                key={`colorDot_${i}`} \r\n                                className='dot' \r\n                                style={styles.dot(color[1], colorKey === color[0])}/>\r\n            )}\r\n    </div>\r\n}\r\n\r\nexport default ColorSelector;","import React from 'react'\r\nimport colors from '../config/colors'\r\n\r\nconst CustomUmbrella = (props) => {\r\n\r\n    const {customImage, colorType, isLoading} = props;\r\n\r\n    const styles = {\r\n        umbrella : {\r\n            width : '60%',\r\n            marginLeft : '12%',\r\n        },\r\n        loading : {\r\n            width : 60,\r\n            marginLeft : '45%',\r\n            marginTop : '15%',\r\n        },\r\n        customImage : {\r\n            width: 50, \r\n            right: '33%',\r\n            bottom: '25px',\r\n            position: 'relative'\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        {isLoading ? <img className='loading' style={styles.loading} src={colors[colorType].loader}/> : \r\n        <>\r\n        <img style={styles.umbrella} src={colors[colorType].umbrella}/>\r\n        {customImage && <img src={customImage} style={styles.customImage}/>}\r\n        </>\r\n}\r\n    </div>\r\n}\r\n\r\nexport default CustomUmbrella;","import React, { useRef } from 'react'\r\n\r\nconst uploadSVG = require('../assets/img/upload_icon.svg').default\r\n\r\nconst UploadButton = (props) => {\r\n\r\n    const { fileName, setFileTypeError, validFileTypes, setImageName, setImage} = props\r\n    const hiddenFileInput = useRef(null);\r\n\tconst handleUploadClick = () => hiddenFileInput.current.click();\r\n\r\n    const styles = {\r\n        body : {\r\n            width : '65%',\r\n            backgroundColor : 'cornflowerblue',\r\n            height : '35px',\r\n            cursor : 'pointer',\r\n            color : 'white',\r\n            textAlign : 'center',\r\n            paddingTop : '12px',\r\n            fontSize : '17px',\r\n        },\r\n        name : {\r\n            width : 130,\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            marginLeft : '35%',\r\n            textAlign : 'center',\r\n        },\r\n        upload : {\r\n            height : 15,\r\n            float : 'left',\r\n            marginLeft : '5%',\r\n            marginTop : '1%',\r\n        }\r\n    }\r\n\r\n    const uploadImage = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tif(!validFileTypes.includes(e.target.files[0].type)){\r\n                setFileTypeError(true)\r\n                setImageName(null)\r\n                setImage(null)\r\n            }else{\r\n                setFileTypeError(false)\r\n                const [file] = e.target.files;\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (e) => {\r\n                        setImageName(file.name)\r\n                        setImage(e.target.result)\r\n                        console.log(e.target, file)\r\n                    }\r\n                    reader.readAsDataURL(file);\r\n                  }\r\n            }\r\n\t\t}\r\n\t};\r\n\r\n    return <div style={styles.body} onClick={handleUploadClick}>\r\n                <img style={styles.upload} className='white-svg' src={uploadSVG}/>\r\n                <div style={styles.name}>{fileName || 'UPLOAD LOGO'}</div>\r\n                <input\r\n\t\t\t\t\tref={hiddenFileInput}\r\n\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\tonChange={uploadImage}\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t/>\r\n            </div>\r\n}\r\n\r\nexport default UploadButton;","import React, { useEffect, useState } from 'react'\r\nimport ColorSelector from '../component/ColorSelector'\r\nimport CustomUmbrella from '../component/CustomUmbrella'\r\nimport UploadButton from '../component/UploadButton'\r\nimport colors from '../config/colors'\r\n\r\nconst Umbrella = () => {\r\n\r\n    const [color , setColor] = useState('PINK')\r\n    const [customImage , setCustomImage] = useState(null)\r\n    const [customImageName , setCustomImageName] = useState(null)\r\n    const [fileTypeError , setFileTypeError] = useState(false)\r\n    const [isLoading , setIsLoading] = useState(false)\r\n\r\n    const validFileTypes = ['image/png', 'image/jpeg'];\r\n\r\n    const styles = {\r\n        body : {\r\n            backgroundColor: `rgb(${colors[color].rgb},0.3)`\r\n        },\r\n        container : {\r\n            top: '30%',\r\n            height: '70%',\r\n            position: 'relative'\r\n        },\r\n        content : {\r\n            display : 'flex'\r\n        },\r\n        left : {\r\n            float: 'left',\r\n            width: '60%',\r\n        },\r\n        right : {\r\n            float: 'right',\r\n            width: '40%',\r\n        },\r\n        h1 : {\r\n            fontWeight: '600',\r\n            fontSize : '40px',\r\n            marginBottom : '40px'\r\n        },\r\n        h2 :{\r\n            fontWeight: '500',\r\n            fontSize : '18px',\r\n            marginBottom : '10px'\r\n        },\r\n        h3 :{\r\n            fontWeight: '400',\r\n            fontSize : '15px',\r\n            marginBottom : '10px'\r\n        },\r\n        h4 :{\r\n            fontWeight: 'lighter',\r\n            fontSize : '15px',\r\n            marginBottom : '15px',\r\n            color : `${fileTypeError ? 'red' : 'black'}`\r\n        },\r\n        colors : {\r\n            marginBottom : '40px'\r\n        }\r\n    }\r\n\r\n    return <div style={styles.body} className=\"Umbrella\">\r\n                <div style={styles.container}>\r\n                    <div style={styles.content}>\r\n                        <div style={styles.left}>\r\n                            <CustomUmbrella \r\n                                isLoading={isLoading} \r\n                                colorType={color} \r\n                                customImage={customImage} />\r\n                        </div>\r\n                        <div style={styles.right}>\r\n                            <div style={styles.h1}>Custom Umbrella</div>\r\n                            <ColorSelector \r\n                                setIsLoading={setIsLoading} \r\n                                style={styles.colors} \r\n                                colorKey={color} \r\n                                setColor={setColor}/>\r\n                            <div style={styles.h2}>Customise your Umbrella</div>\r\n                            <div style={styles.h3}>Upload a logo for instant preview.</div>\r\n                            <div style={styles.h4}>.png and .jpg files only. Max file size is 5MB.</div>\r\n                            <UploadButton \r\n                                setFileTypeError={setFileTypeError}\r\n                                setIsLoading={setIsLoading}\r\n                                validFileTypes={validFileTypes}\r\n                                fileName={customImageName}\r\n                                setImageName={setCustomImageName}\r\n                                setImage={setCustomImage}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n}\r\n\r\nexport default Umbrella;","import React from \"react\";\r\nimport Umbrella from \"./screens/Umbrella\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Umbrella />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}